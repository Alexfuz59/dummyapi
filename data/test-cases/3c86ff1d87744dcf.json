{
  "uid" : "3c86ff1d87744dcf",
  "name" : "Update user email by id",
  "fullName" : "tests.test_user_controller.TestUser#test_update_email_user",
  "historyId" : "d3c7909542544c6829a95e6640744ef6",
  "time" : {
    "start" : 1710016704714,
    "stop" : 1710016704941,
    "duration" : 227
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Error status code 200",
  "statusTrace" : "self = <test_user_controller.TestUser object at 0x7fe8b99cbe00>\nuser = User(id='65ecc8c061baa2cd1dfc3eb2', title=None, firstName='Cody', lastName='Hunter', gender=None, email='rebeccakelly@...8:24.627Z', updatedDate='2024-03-09T20:38:24.627Z', phone=None, picture='https://picsum.photos/275/778', location=None)\nauthorization = {'app-id': '65d388b26d41f39919c944af'}\n\n    @allure.title('Update user email by id')\n    def test_update_email_user(self, user, authorization):\n        self.update_user.request_update_user(user, authorization, UpUs.update_email())\n>       self.update_user.check_response_is_403()\n\ntests/test_user_controller.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <endpoints.user_controller.update_user.UpdateUser object at 0x7fe8b99d6a50>\n\n    @allure.step('Check response is 404')\n    def check_response_is_403(self):\n>       assert self.response.status_code == 403, f'Error status code {self.response.status_code}'\nE       AssertionError: Error status code 200\n\nbase/base_api.py:29: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1710016675739,
      "stop" : 1710016675760,
      "duration" : 21
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "user",
    "time" : {
      "start" : 1710016704482,
      "stop" : 1710016704714,
      "duration" : 232
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Create user",
      "time" : {
        "start" : 1710016704482,
        "stop" : 1710016704713,
        "duration" : 231
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "headers",
        "value" : "{'app-id': '65d388b26d41f39919c944af'}"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "Check response is 200",
      "time" : {
        "start" : 1710016704713,
        "stop" : 1710016704713,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Check validate schema",
      "time" : {
        "start" : 1710016704713,
        "stop" : 1710016704714,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 3,
    "hasContent" : true
  }, {
    "name" : "authorization",
    "time" : {
      "start" : 1710016704479,
      "stop" : 1710016704479,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "setup",
    "time" : {
      "start" : 1710016704479,
      "stop" : 1710016704482,
      "duration" : 3
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Error status code 200",
    "statusTrace" : "self = <test_user_controller.TestUser object at 0x7fe8b99cbe00>\nuser = User(id='65ecc8c061baa2cd1dfc3eb2', title=None, firstName='Cody', lastName='Hunter', gender=None, email='rebeccakelly@...8:24.627Z', updatedDate='2024-03-09T20:38:24.627Z', phone=None, picture='https://picsum.photos/275/778', location=None)\nauthorization = {'app-id': '65d388b26d41f39919c944af'}\n\n    @allure.title('Update user email by id')\n    def test_update_email_user(self, user, authorization):\n        self.update_user.request_update_user(user, authorization, UpUs.update_email())\n>       self.update_user.check_response_is_403()\n\ntests/test_user_controller.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <endpoints.user_controller.update_user.UpdateUser object at 0x7fe8b99d6a50>\n\n    @allure.step('Check response is 404')\n    def check_response_is_403(self):\n>       assert self.response.status_code == 403, f'Error status code {self.response.status_code}'\nE       AssertionError: Error status code 200\n\nbase/base_api.py:29: AssertionError",
    "steps" : [ {
      "name" : "Update user data",
      "time" : {
        "start" : 1710016704714,
        "stop" : 1710016704941,
        "duration" : 227
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "user_before",
        "value" : "User(id='65ecc8c061baa2cd1dfc3eb2', title=None, firstName='Cody', lastName='Hunter', gender=None, email='rebeccakelly@gmail.com', dateOfBirth=None, registerDate='2024-03-09T20:38:24.627Z', updatedDate='2024-03-09T20:38:24.627Z', phone=None, picture='https://picsum.photos/275/778', location=None)"
      }, {
        "name" : "headers",
        "value" : "{'app-id': '65d388b26d41f39919c944af'}"
      }, {
        "name" : "model",
        "value" : "{'email': 'victoriapennington@gmail.com'}"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "Check response is 404",
      "time" : {
        "start" : 1710016704941,
        "stop" : 1710016704941,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Error status code 200\n",
      "statusTrace" : "  File \"/usr/local/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/usr/workspace/base/base_api.py\", line 29, in check_response_is_403\n    assert self.response.status_code == 403, f'Error status code {self.response.status_code}'\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "stepsCount" : 2,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "user::0",
    "time" : {
      "start" : 1710016704944,
      "stop" : 1710016705123,
      "duration" : 179
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Delete user",
      "time" : {
        "start" : 1710016704944,
        "stop" : 1710016705121,
        "duration" : 177
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "user",
        "value" : "User(id='65ecc8c061baa2cd1dfc3eb2', title=None, firstName='Cody', lastName='Hunter', gender=None, email='rebeccakelly@gmail.com', dateOfBirth=None, registerDate='2024-03-09T20:38:24.627Z', updatedDate='2024-03-09T20:38:24.627Z', phone=None, picture='https://picsum.photos/275/778', location=None)"
      }, {
        "name" : "headers",
        "value" : "{'app-id': '65d388b26d41f39919c944af'}"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 1,
    "hasContent" : true
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "User controller"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_user_controller"
  }, {
    "name" : "subSuite",
    "value" : "TestUser"
  }, {
    "name" : "host",
    "value" : "cbe4cb7888fc"
  }, {
    "name" : "thread",
    "value" : "1-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_user_controller"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 5,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 5
      },
      "items" : [ {
        "uid" : "b56a41206b3e3e27",
        "status" : "failed",
        "statusDetails" : "AssertionError: Error status code 200",
        "time" : {
          "start" : 1710001551957,
          "stop" : 1710001552103,
          "duration" : 146
        }
      }, {
        "uid" : "16785da1022b9928",
        "status" : "failed",
        "statusDetails" : "AssertionError: Error status code 200",
        "time" : {
          "start" : 1709739762345,
          "stop" : 1709739762444,
          "duration" : 99
        }
      }, {
        "uid" : "2299020b5093bb92",
        "status" : "failed",
        "statusDetails" : "AssertionError: Error status code 200",
        "time" : {
          "start" : 1709561730395,
          "stop" : 1709561730546,
          "duration" : 151
        }
      }, {
        "uid" : "8e44740016f8870",
        "status" : "failed",
        "statusDetails" : "AssertionError: Error status code 200",
        "time" : {
          "start" : 1709561497425,
          "stop" : 1709561497574,
          "duration" : 149
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "3c86ff1d87744dcf.json",
  "parameterValues" : [ ]
}